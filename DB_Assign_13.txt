/*
Subject :DB (Assign_13:Using the UNION clause.)
Name    :Shubham Bhaurao Mate
Roll No.:92 
*/


1) Create a union of two queries that shows the names, cities, and ratings of all
   customers. Those with rating of 200 or greater will also have the words “High
   Rating”, while the others will have the words “Low Rating”.
==>SELECT cname,city,'HIGH RATING' RATING FROM customers WHERE rating>200
   UNION
   SELECT cname,city,'LOW RATING' RATING FROM customers WHERE rating <=200;

   CNAME       CITY        RATING
   cisneros    san jose    HIGH RATING 
   clemens     london      LOW RATING
   giovanni    rome        LOW RATING
   grass       berliln     HIGH RATING
   hoffman     london      LOW RATING
   liu         san jose    LOW RATING
   pereira     rome        LOW RATING
   7 rows selected.
===============================================================================

2) Write a command that produces the name and number of each salesperson and
   each customer with more than one current order. Put the results in 
   alphabetical order.
==>SELECT sname,snum,cname FROM salespeople JOIN customers using(snum)
   WHERE snum IN (SELECT snum FROM customers GROUP BY snum HAVING count(snum)>1)
   ORDER BY sname,cname;

   SNAME    SNUM    CNAME
   Seel     1001    Clemens
   Seel     1001    Hoffman
   Serres   1002    G
   Serres   1002    Liu
===============================================================================

3) Form a union of three queries. Have the first select the snums of all 
   salespeople in San Jose; the second, the cnums of all customers in San Jose;
   and the third the onums of all orders on October 3. Retain duplicates 
   between the last two queries but eliminate any redundancies between either 
   of them and the first.
   (Note: in the sample tables as given, there would be no such redundancy. 
          This is besides the point.)
==>SELECT snum FROM salespeople WHERE city='san jose'
   UNION
   SELECT DISTINCT snum FROM orders WHERE snum IN (SELECT snum FROM orders
   WHERE odate LIKE '03-OCT-%');

   SNUM
   1001
   1002
   1004
   1007
===============================================================================